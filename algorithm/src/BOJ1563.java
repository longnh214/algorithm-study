/**
 * @author nakhoonchoi
 * @date 2025/04/28
 * @see https://boj.ma/1563
 * @mem 14,304kb
 * @time 104ms
 * @caution
 * [고려사항]
 * DP 점화식을 어떻게 작성해야하나... 머리 아픈 문제다. 우선 경우의 수가 많아보였다.
 * 우선 dp 배열을 3차원 배열로 아래와 같이 선언했다.
 * dp[개근상을 체크할 날짜][지각을 지금까지 몇 번 했는지][결석을 연속으로 몇 번 했는지] = 경우의 수
 * 만약 dp[N][0][0]이라면, N일까지 지각을 한 번도 한 적 없고, 현재 결석도 연속으로 0번 했다는 뜻이다.
 * 그리고 dp[N][1][2]라면, N일까지 지각을 한 번 했었고, 현재 결석을 연속으로 2번 진행된 상태라는 뜻이다.
 *
 * 각 점화식을 보면, dp[i][0][0]은 이전 날짜까지 지각 카운트가 하나도 없는 모든 경우의 수를 더하면 된다.(결석을 여러 번 했더라도 초기화 할 수 있기 때문에)
 * dp[i][0][1]은 이전 날짜까지 지각 카운트가 하나도 없고 연속으로 0번 결석한 경우의 수가 그대로 오면 된다.
 * dp[i][0][2]은 이전 날짜까지 지각 카운트가 하나도 없고 연속으로 1번 결석한 경우의 수가 그대로 오면 된다.
 * dp[i][1][0]은 이전 날짜의 모든 경우의 수가 올 수 있다. 지각이 없었더라도 새로 지각 카운트가 하나 쌓일 수 있고, 이전까지 지각이 하나 있으면서 연속된 결석이 있었더라도 초기화가 가능하다.
 * dp[i][1][1]과 dp[i][1][2]는 dp[i][0][1]과 dp[i][0][2]와 로직이 비슷하다. 연속된 결석의 수만 체크하면 된다.
 *
 * 직관적으로 3차원 배열을 선언해서 점화식을 구하면 풀 수 있는 문제였다.
 * [입력사항]
 * [출력사항]
 */
import java.io.*;
//백준 <DP> '개근상'

public class BOJ1563 {
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        final int MOD = 1_000_000;

        int [][][] dp = new int[N+1][2][3];

        dp[1][0][0] = 1;
        dp[1][1][0] = 1;
        dp[1][0][1] = 1;

        //현재 상태
        //0 - 지각 0번 (결석도 없는 상태) / 1 - 지각 1번 / 2 - 결석 1번 / 3 - (지각 1번) 결석 1번 / 4 - 결석 2번 연속 / 5 - (지각 1번) 결석 2번 연속
        for(int i=2;i<=N;i++){
            dp[i][0][0] = (dp[i-1][0][0] + dp[i-1][0][1] + dp[i-1][0][2]) % MOD;
            dp[i][0][1] = (dp[i-1][0][0]) % MOD;
            dp[i][0][2] = (dp[i-1][0][1]) % MOD;
            dp[i][1][0] = (dp[i-1][0][0] + dp[i-1][0][1] + dp[i-1][0][2] + dp[i-1][1][0] + dp[i-1][1][1] + dp[i-1][1][2]) % MOD;
            dp[i][1][1] = (dp[i-1][1][0]) % MOD;
            dp[i][1][2] = (dp[i-1][1][1]) % MOD;
        }

        int answer = 0;
        for(int i=0;i<6;i++){
            answer = ((answer + dp[N][i/3][i%3]) % MOD);
        }

        System.out.println(answer);
    }
}